{"version":3,"sources":["components/Title.js","firebase.js","components/AddTodo.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","result","userId","user","uid","localStorage","setItem","catch","error","code","message","customData","email","credentialFromError","AddTodo","props","React","useState","title","setTitle","handleSubmit","e","a","preventDefault","addDoc","collection","completed","onSubmit","type","placeholder","value","onChange","target","Todo","todo","toggleComplete","handleDelete","handleEdit","newTitle","setNewTitle","style","textDecoration","complete","onClick","id","App","todos","setTodos","useEffect","q","query","unsub","onSnapshot","querySnapshot","todosArray","forEach","doc","push","data","updateDoc","deleteDoc","exact","path","element","to","getItem","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.416d4d48.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Title() {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>Todo App</h1>\r\n    </div>\r\n  );\r\n}\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAuth,GoogleAuthProvider,signInWithPopup } from \"firebase/auth\";\r\nimport {Link} from 'react-router-dom';\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDQWYUMUT1z3ocSoAheSHPXABckaQLmYIc\",\r\n  authDomain: \"to-do-application-fa421.firebaseapp.com\",\r\n  projectId: \"to-do-application-fa421\",\r\n  storageBucket: \"to-do-application-fa421.appspot.com\",\r\n  messagingSenderId: \"245891755707\",\r\n  appId: \"1:245891755707:web:586783606894d549ed039e\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nexport const auth=getAuth(app);\r\nconst provider = new GoogleAuthProvider();\r\nexport const signInWithGoogle=()=>{\r\n    signInWithPopup(auth,provider).then((result) => {\r\n      // const credential = GoogleAuthProvider.credentialFromResult(result);\r\n      // const token = credential.accessToken;\r\n      const userId = result.user.uid;\r\n      localStorage.setItem(\"userId\",userId)\r\n    \r\n    }).catch((error) => {\r\n     \r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      const email = error.customData.email;\r\n      const credential = GoogleAuthProvider.credentialFromError(error);\r\n      \r\n    });\r\n  \r\n}\r\n\r\nexport { db };\r\n","import React from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\n\r\nexport default function AddTodo(props) {\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const userId=props.userId;\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (title !== \"\") {\r\n      await addDoc(collection(db, \"todos\"), {\r\n        title,\r\n        completed: false,\r\n        userId,\r\n      });\r\n      setTitle(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"input_container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter todo...\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"btn_container\">\r\n        <button>Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nexport default function Todo({ todo, toggleComplete, handleDelete, handleEdit,}) {\r\n  const [newTitle, setNewTitle] = React.useState(todo.title);\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (todo.complete === true) {\r\n      setNewTitle(todo.title);\r\n    } else {\r\n      todo.title = \"\";\r\n      setNewTitle(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"todo\">\r\n      <input\r\n        style={{ textDecoration: todo.completed && \"line-through\" }}\r\n        type=\"text\"\r\n        value={todo.title === \"\" ? newTitle : todo.title}\r\n        className=\"list\"\r\n        onChange={handleChange}\r\n      />\r\n      <div>\r\n        <button\r\n          className=\"button-complete\"\r\n          onClick={() => toggleComplete(todo)}\r\n        >\r\n          <CheckCircleIcon id=\"i\" />\r\n        </button>\r\n        <button\r\n          className=\"button-edit\"\r\n          onClick={() => handleEdit(todo, newTitle)}\r\n        >\r\n          <EditIcon id=\"i\" />\r\n        </button>\r\n        <button className=\"button-delete\" onClick={() => handleDelete(todo.id)}>\r\n          <DeleteIcon id=\"i\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Title from \"./components/Title\";\r\nimport AddTodo from \"./components/AddTodo\";\r\nimport Todo from \"./components/Todo\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport {\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  doc,\r\n  updateDoc,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport { db,signInWithGoogle } from \"./firebase\";\r\n\r\n\r\nfunction App() {\r\n \r\n  const [todos, setTodos] = React.useState([]);\r\n    \r\n  React.useEffect(() => {\r\n    const q = query(collection(db, \"todos\"));\r\n    const unsub = onSnapshot(q, (querySnapshot) => {\r\n      let todosArray = [];\r\n      querySnapshot.forEach((doc) => {\r\n        todosArray.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setTodos(todosArray);\r\n    });\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  const handleEdit = async (todo, title) => {\r\n    await updateDoc(doc(db, \"todos\", todo.id), { title: title });\r\n  };\r\n  const toggleComplete = async (todo) => {\r\n    await updateDoc(doc(db, \"todos\", todo.id), { completed: !todo.completed });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    await deleteDoc(doc(db, \"todos\", id));\r\n  };\r\n  return (\r\n    <Router className=\"App\">\r\n     \r\n      <Routes>\r\n           <Route exact path=\"/\" element={ \r\n           <div className=\"btn\"><Link to=\"/display\" className=\"signIn-btn\" onClick={signInWithGoogle}>Sign in with Google</Link></div>}/>\r\n           <Route exact path=\"/display\" element={\r\n            <div>\r\n            <div>\r\n              <Title />\r\n            </div>\r\n            <div>\r\n              <AddTodo userId={localStorage.getItem(\"userId\")} />\r\n            </div>\r\n            <div className=\"todo_container\">\r\n              {todos.map((todo) => (\r\n                <Todo\r\n                  key={todo.id}\r\n                  todo={todo}\r\n                  toggleComplete={toggleComplete}\r\n                  handleDelete={handleDelete}\r\n                  handleEdit={handleEdit}\r\n                />\r\n              ))}\r\n            </div>\r\n            </div>\r\n         }/>\r\n      \r\n     \r\n       </Routes>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}